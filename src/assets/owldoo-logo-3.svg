<!-- Add SVG title and description for accessibility -->
    <title>Owldoo Logo</title>
        
      <g id="state-labels" opacity="0.5">
        <text x="50" y="25" text-anchor="middle" fill="#3498DB" font-size="6">Alert</text>
        <text x="80" y="25" text-anchor="middle" fill="#3498DB" font-size="6">Think</text>
        <text x="120" y="25" text-anchor="middle" fill="#3498DB" font-size="6">Happy</text>
        <text x="150" y="25" text-anchor="middle" fill="#3498DB" font-size="6">Flap</text>
      </g>
      
      <!-- Additional speech bubbles for different states -->
      <g id="alert-bubble" opacity="0">
        <path d="M50 60 Q30 55 35 40 Q45 30 60 55 L50 60 Z" fill="white" />
        <text x="45" y="45" font-size="5" text-anchor="middle" fill="#E74C3C">Hoot!</text>
      </g>
      
      <g id="happy-bubble" opacity="0">
        <path d="M120 55 Q140 50 150 35 Q140 25 115 45 L120 55 Z" fill="white" />
        <text x="135" y="40" font-size="5" text-anchor="middle" fill="#27AE60">Hello!</text>
      </g>      <!-- Expressions for different states -->
      <g id="expressions">
        <!-- Default expression (always visible) -->
        <g id="default-expression">
          <!-- Eyes are defined in the eye section -->
        </g>
        
        <!-- Alert expression (initially hidden) -->
        <g id="alert-expression" opacity="0">
          <!-- Wider eyes created by modifying the eye group when in alert state -->
        </g>
        
        <!-- Happy expression (initially hidden) -->
        <g id="happy-expression" opacity="0">
          <!-- Curved eyes replacing normal eyes when in happy state -->
          <path d="M70 85 Q80 75 90 85" stroke="#E5E9EA" stroke-width="2" fill="none" />
          <path d="M110 85 Q120 75 130 85" stroke="#E5E9EA" stroke-width="2" fill="none" />
        </g>
        
        <!-- Thinking expression (initially hidden) -->
        <g id="thinking-expression" opacity="0">
          <!-- One eye squinted as if deep in thought -->
          <path d="M75 85 Q80 80 85 85" stroke="#E5E9EA" stroke-width="2" fill="none" />
        </g>
      </g>    <!-- Enhanced shadow filter -->
    <filter id="dropShadow" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="2" />
      <feOffset dx="2" dy="3" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.3" />
      </feComponentTransfer>
      <feMerge>
        <feMergeNode />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <!-- Soft glow filter -->
    <filter id="glow" x="-50%" y="-50%" width="200%" height="200%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="4" />
      <feOffset dx="0" dy="0" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.6" />
      </feComponentTransfer>
      <feFlood flood-color="#4A90E2" flood-opacity="0.6" />
      <feComposite in2="SourceAlpha" operator="in" />
      <feMerge>
        <feMergeNode />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <!-- Inner shadow for depth -->
    <filter id="innerShadow">
      <feOffset dx="0" dy="1" />
      <feGaussianBlur stdDeviation="1" result="offset-blur" />
      <feComposite operator="out" in="SourceGraphic" in2="offset-blur" result="inverse" />
      <feFlood flood-color="black" flood-opacity="0.2" result="color" />
      <feComposite operator="in" in="color" in2="inverse" result="shadow" />
      <feComposite operator="over" in="shadow" in2="SourceGraphic" />
    </filter>    <!-- Speech bubble that appears on hover -->
    <g id="speech-bubble" opacity="0.3">
      <path d="M140 60 Q160 55 155 40 Q145 30 130 45 L140 60 Z" fill="white" />
      <text x="145" y="45" font-size="5" text-anchor="middle" fill="#3498DB">Time is wisdom!</text>
    </g>
    
    <!-- Magic sparkles with animations -->
    <g id="magic-sparkles">
      <path d="M60 50 L62 45 L64 50 L69 52 L64 54 L62 59 L60 54 L55 52 Z" fill="#F1C40F" opacity="0.4">
        <animate attributeName="opacity" values="0.4;0.8;0.4" dur="3s" begin="0s" repeatCount="indefinite" />
        <animate attributeName="transform" type="scale" values="1;1.2;1" dur="3s" begin="0s" repeatCount="indefinite" additive="sum" />
      </path>
      <path d="M140 50 L142 45 L144 50 L149 52 L144 54 L142 59 L140 54 L135 52 Z" fill="#F1C40F" opacity="0.4">
        <animate attributeName="opacity" values="0.4;0.8;0.4" dur="3s" begin="1.5s" repeatCount="indefinite" />
        <animate attributeName="transform" type="scale" values="1;1.2;1" dur="3s" begin="1.5s" repeatCount="indefinite" additive="sum" />
      </path>
    </g>
    
    <!-- Thinking bubbles -->
    <g id="thinking-bubbles" opacity="0.2">
      <circle cx="75" cy="45" r="5" fill="white">
        <animate attributeName="r" values="5;6;5" dur="4s" begin="0s" repeatCount="indefinite" />
      </circle>
      <circle cx="65" cy="40" r="3" fill="white">
        <animate attributeName="r" values="3;4;3" dur="4s" begin="0.6s" repeatCount="indefinite" />
      </circle>
      <circle cx="57" cy="35" r="2" fill="white">
        <animate attributeName="r" values="2;2.5;2" dur="4s" begin="1.2s" repeatCount="indefinite" />
      </circle>
    </g>    <!-- Knowledge symbols -->
    <g id="knowledge-symbols" opacity="0.2">
      <path d="M60 130 L60 150 L75 150 L75 130 Z" fill="#3498DB">
        <animate attributeName="opacity" values="0.2;0.4;0.2" dur="5s" begin="0s" repeatCount="indefinite" />
      </path>
      <path d="M80 125 L80 150 L95 150 L95 125 Z" fill="#27AE60">
        <animate attributeName="opacity" values="0.2;0.4;0.2" dur="5s" begin="0.5s" repeatCount="indefinite" />
      </path>
      <path d="M100 135 L100 150 L115 150 L115 135 Z" fill="#9B59B6">
        <animate attributeName="opacity" values="0.2;0.4;0.2" dur="5s" begin="1s" repeatCount="indefinite" />
      </path>
      <path d="M120 130 L120 150 L135 150 L135 130 Z" fill="#E74C3C">
        <animate attributeName="opacity" values="0.2;0.4;0.2" dur="5s" begin="1.5s" repeatCount="indefinite" />
      </path>
    </g>
    
    <!-- Wisdom aura -->
    <circle id="wisdom-aura" cx="100" cy="100" r="65" fill="none" stroke="#4A90E2" stroke-width="1" opacity="0.2">
      <animate attributeName="r" values="65;70;65" dur="6s" repeatCount="indefinite" />
      <animate attributeName="opacity" values="0.2;0.3;0.2" dur="6s" repeatCount="indefinite" />
    </circle>    <!-- Background circles with animation -->
    <circle cx="100" cy="100" r="95" fill="none" stroke="#4A90E2" stroke-width="2" opacity="0.2">
      <animate attributeName="opacity" values="0.2;0.4;0.2" dur="8s" repeatCount="indefinite" />
    </circle>
    <circle cx="100" cy="100" r="85" fill="url(#timeGradient)" opacity="0.15">
      <animate attributeName="r" values="85;88;85" dur="8s" repeatCount="indefinite" />
    </circle><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200" width="100%" height="100%" preserveAspectRatio="xMidYMid meet">
  <defs>
    <!-- Basic color definitions (optimized gradients) -->
    <linearGradient id="owlGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#1A2634">
        <animate attributeName="stop-color" 
                 values="#1A2634;#2C3E50;#1A2634" 
                 dur="8s" 
                 repeatCount="indefinite" />
      </stop>
      <stop offset="45%" style="stop-color:#2C3E50" />
      <stop offset="55%" style="stop-color:#34495E" />
      <stop offset="100%" style="stop-color:#2C3E50">
        <animate attributeName="stop-color" 
                 values="#2C3E50;#34495E;#2C3E50" 
                 dur="8s" 
                 repeatCount="indefinite" />
      </stop>
    </linearGradient>
    
    <linearGradient id="timeGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4A90E2">
        <animate attributeName="stop-color" 
                 values="#4A90E2;#3498DB;#4A90E2" 
                 dur="10s" 
                 repeatCount="indefinite" />
      </stop>
      <stop offset="100%" style="stop-color:#2C3E50">
        <animate attributeName="stop-color" 
                 values="#2C3E50;#34495E;#2C3E50" 
                 dur="10s" 
                 repeatCount="indefinite" />
      </stop>
    </linearGradient>
    
    <pattern id="featherPattern" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
      <path d="M0 10 Q10 0, 20 10" stroke="white" stroke-width="0.8" fill="none" opacity="0.2">
        <animate attributeName="d" 
                 values="M0 10 Q10 0, 20 10;M0 10 Q10 5, 20 10;M0 10 Q10 0, 20 10" 
                 dur="4s" 
                 repeatCount="indefinite" />
      </path>
      <path d="M0 20 Q10 10, 20 20" stroke="white" stroke-width="0.8" fill="none" opacity="0.1">
        <animate attributeName="d" 
                 values="M0 20 Q10 10, 20 20;M0 20 Q10 15, 20 20;M0 20 Q10 10, 20 20" 
                 dur="5s" 
                 repeatCount="indefinite" />
      </path>
      <path d="M10 0 Q20 10, 10 20" stroke="white" stroke-width="0.5" fill="none" opacity="0.15" />
    </pattern>
    
    <!-- Add responsive design meta tag -->
    <style type="text/css">
      /* Responsive sizing adjustments */
      @media (max-width: 300px) {
        #knowledge-symbols,
        #calendar-grid,
        #calendar-lines {
          display: none;
        }
        #state-labels {
          font-size: 4px;
        }
      }
      
      /* Base animations */
      @keyframes blink {
        0%, 45%, 55%, 100% { transform: scaleY(1); }
        50% { transform: scaleY(0.1); }
      }
      
      @keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-5px); }
      }
      
      @keyframes breathe {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.03); }
      }
      
      @keyframes wiggle {
        0%, 90%, 100% { transform: rotate(0deg); }
        95% { transform: rotate(-5deg); }
      }
      
      @keyframes pupilMove {
        0%, 100% { transform: translate(0, 0); }
        25% { transform: translate(2px, -2px); }
        50% { transform: translate(-1px, 2px); }
        75% { transform: translate(-2px, -1px); }
      }
      
      @keyframes pulse {
        0%, 100% { opacity: 0.6; }
        50% { opacity: 1; }
      }
      
      @keyframes sparkle {
        0%, 100% { opacity: 0.8; transform: scale(1); }
        50% { opacity: 1; transform: scale(1.5); }
      }
      
      /* Interactive animations */
      @keyframes headTurn {
        0%, 10%, 100% { transform: rotate(0deg); }
        2% { transform: rotate(-8deg); }
        4% { transform: rotate(8deg); }
        6% { transform: rotate(-5deg); }
        8% { transform: rotate(5deg); }
      }
      
      @keyframes hoot {
        0%, 100% { transform: scale(1); }
        10% { transform: scale(1.05); }
        20% { transform: scale(1); }
        30% { transform: scale(1.05); }
        40% { transform: scale(1); }
      }
      
      @keyframes flapWings {
        0%, 75%, 100% { transform: scaleX(1) rotate(0deg); }
        80% { transform: scaleX(1.2) rotate(-5deg); }
        85% { transform: scaleX(1.2) rotate(5deg); }
        90% { transform: scaleX(1.1) rotate(-3deg); }
        95% { transform: scaleX(1.1) rotate(3deg); }
      }
      
      @keyframes joyBounce {
        0%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
        80% { transform: translateY(-2px); }
      }
      
      /* Base animations assignment */
      #owl-body {
        animation: float 4s ease-in-out infinite;
      }
      
      #left-eye, #right-eye {
        transform-origin: center;
      }
      
      #left-eye {
        animation: blink 6s infinite;
      }
      
      #right-eye {
        animation: blink 6s infinite;
        animation-delay: 0.5s;
      }
      
      #left-pupil, #right-pupil {
        animation: pupilMove 5s infinite;
      }
      
      #ear-tufts {
        animation: wiggle 8s infinite;
        transform-origin: bottom center;
      }
      
      .time-marker {
        animation: pulse 3s infinite;
      }
      
      #sparkles circle {
        animation: sparkle 4s infinite;
      }
      
      #sparkles circle:nth-child(1) { animation-delay: 0s; }
      #sparkles circle:nth-child(2) { animation-delay: 0.5s; }
      #sparkles circle:nth-child(3) { animation-delay: 1s; }
      #sparkles circle:nth-child(4) { animation-delay: 1.5s; }
      #sparkles circle:nth-child(5) { animation-delay: 2s; }
      #sparkles circle:nth-child(6) { animation-delay: 2.5s; }
      
      #left-wing, #right-wing {
        animation: breathe 6s infinite;
      }
      
      #left-wing {
        transform-origin: right center;
      }
      
      #right-wing {
        transform-origin: left center;
      }
      
      /* State classes for the owl */
      .owldoo-logo.alert #left-pupil,
      .owldoo-logo.alert #right-pupil {
        transform: scale(1.3);
        animation: none;
      }
      
      .owldoo-logo.alert #left-eye,
      .owldoo-logo.alert #right-eye {
        animation: none;
      }
      
      .owldoo-logo.alert #ear-tufts {
        transform: translateY(-4px) scale(1.1);
      }
      
      .owldoo-logo.thinking #thinking-bubbles {
        opacity: 0.8;
      }
      
      .owldoo-logo.thinking #owl-head {
        animation: headTurn 4s infinite;
      }
      
      .owldoo-logo.happy #owl-body {
        animation: joyBounce 2s infinite ease-in-out;
      }
      
      .owldoo-logo.happy #speech-bubble {
        opacity: 0.8;
      }
      
      .owldoo-logo.flapping #left-wing,
      .owldoo-logo.flapping #right-wing {
        animation: flapWings 2s infinite;
      }
      
      /* Hover effects */
      .owldoo-logo:hover #speech-bubble {
        opacity: 0.8;
      }
      
      .owldoo-logo:hover #wisdom-aura {
        opacity: 0.4;
      }
      
      .owldoo-logo:hover #magic-sparkles {
        opacity: 0.8;
      }
      
      /* Interactive triggers styling - improve clickability */
      #state-triggers circle {
        cursor: pointer;
        fill: transparent;
        stroke: #3498DB;
        stroke-width: 0.5;
        stroke-opacity: 0.2;
        transition: stroke-opacity 0.3s ease;
      }
      
      #state-triggers circle:hover {
        stroke-opacity: 0.5;
      }
      
      /* Optimize animations for performance */
      @media (prefers-reduced-motion: reduce) {
        *, *::before, *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
          animation-delay: 0ms !important;
        }
      }
      
      .owldoo-logo {
        cursor: pointer;
        transition: transform 0.3s ease;
      }
    </style>
    
    <radialGradient id="eyeGradient" cx="50%" cy="50%" r="50%" fx="25%" fy="25%">
      <stop offset="0%" style="stop-color:#FFFFFF" />
      <stop offset="80%" style="stop-color:#ECF0F1" />
      <stop offset="100%" style="stop-color:#BDC3C7" />
      <animate attributeName="fx" values="25%;35%;25%" dur="3s" repeatCount="indefinite" />
      <animate attributeName="fy" values="25%;35%;25%" dur="3s" repeatCount="indefinite" />
    </radialGradient>
    
    <radialGradient id="irisGradient" cx="50%" cy="50%" r="50%">
      <stop offset="0%" style="stop-color:#27AE60" />
      <stop offset="80%" style="stop-color:#2ECC71" />
      <stop offset="100%" style="stop-color:#16A085" />
      <animate attributeName="r" values="50%;45%;50%" dur="5s" repeatCount="indefinite" />
    </radialGradient>
    
    <linearGradient id="beakGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#F39C12" />
      <stop offset="50%" style="stop-color:#E67E22" />
      <stop offset="100%" style="stop-color:#D35400" />
    </linearGradient>
    
    <linearGradient id="brandGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#3498DB" />
      <stop offset="100%" style="stop-color:#4A90E2" />
    </linearGradient>

    <filter id="softGlow" x="-50%" y="-50%" width="200%" height="200%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="5" result="blur" />
      <feFlood flood-color="#4A90E2" flood-opacity="0.3" result="color" />
      <feComposite in="color" in2="blur" operator="in" result="glow" />
      <feMerge>
        <feMergeNode in="glow" />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <!-- Paper texture for knowledge elements -->
    <filter id="paperTexture">
      <feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" seed="5" />
      <feDisplacementMap in="SourceGraphic" scale="1" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.3" intercept="0.7" />
      </feComponentTransfer>
    </filter>
    
    <!-- Sparkle filter -->
    <filter id="sparkle">
      <feTurbulence type="fractalNoise" baseFrequency="0.1" numOctaves="1" seed="0">
        <animate attributeName="seed" values="0;5;0" dur="1s" repeatCount="indefinite" />
      </feTurbulence>
      <feDisplacementMap in="SourceGraphic" scale="0.5" />
      <feGaussianBlur stdDeviation="0.5" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="1.5" />
      </feComponentTransfer>
    </filter>
  </defs>
  
  <!-- Main logo group with class for state changes -->
  <g id="owldoo-logo" class="owldoo-logo">
  
    <!-- State triggers with improved visibility and clickability -->
    <g id="state-triggers">
      <circle id="alert-trigger" cx="50" cy="40" r="15" stroke="#3498DB" stroke-width="0.5" stroke-opacity="0.2" fill="transparent" />
      <circle id="think-trigger" cx="80" cy="40" r="15" stroke="#3498DB" stroke-width="0.5" stroke-opacity="0.2" fill="transparent" />
      <circle id="happy-trigger" cx="120" cy="40" r="15" stroke="#3498DB" stroke-width="0.5" stroke-opacity="0.2" fill="transparent" />
      <circle id="flap-trigger" cx="150" cy="40" r="15" stroke="#3498DB" stroke-width="0.5" stroke-opacity="0.2" fill="transparent" />
    </g>
    <!-- Enhanced background elements -->
    <circle cx="100" cy="100" r="95" fill="none" stroke="#4A90E2" stroke-width="2" opacity="0.2" />
    <circle cx="100" cy="100" r="85" fill="url(#timeGradient)" opacity="0.15" />
    
    <!-- Time markers -->
    <g id="time-markers">
      <circle class="time-marker" cx="100" cy="15" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="0s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="142.5" cy="29.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="0.25s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="170.5" cy="57.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="0.5s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="185" cy="100" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="0.75s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="170.5" cy="142.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="1s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="142.5" cy="170.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="1.25s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="100" cy="185" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="1.5s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="57.5" cy="170.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="1.75s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="29.5" cy="142.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="2s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="15" cy="100" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="2.25s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="29.5" cy="57.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="2.5s" repeatCount="indefinite" />
      </circle>
      <circle class="time-marker" cx="57.5" cy="29.5" r="2" fill="#4A90E2" opacity="0.6">
        <animate attributeName="opacity" values="0.6;1;0.6" dur="3s" begin="2.75s" repeatCount="indefinite" />
      </circle>
    </g>
    
    <!-- Wings with subtle animation -->
    <g id="wings">
      <!-- Left wing -->
      <g id="left-wing">
        <path d="M60 80 Q20 100 60 120" stroke="#2C3E50" stroke-width="8" fill="none" stroke-linecap="round">
          <animate attributeName="d" 
                   values="M60 80 Q20 100 60 120;M60 80 Q15 100 60 120;M60 80 Q20 100 60 120" 
                   dur="8s" 
                   repeatCount="indefinite" />
        </path>
        <path d="M60 85 Q25 100 60 115" stroke="#34495E" stroke-width="4" fill="none" stroke-linecap="round">
          <animate attributeName="d" 
                   values="M60 85 Q25 100 60 115;M60 85 Q20 100 60 115;M60 85 Q25 100 60 115" 
                   dur="8s" 
                   repeatCount="indefinite" />
        </path>
      </g>
      
      <!-- Right wing -->
      <g id="right-wing">
        <path d="M140 80 Q180 100 140 120" stroke="#2C3E50" stroke-width="8" fill="none" stroke-linecap="round">
          <animate attributeName="d" 
                   values="M140 80 Q180 100 140 120;M140 80 Q185 100 140 120;M140 80 Q180 100 140 120" 
                   dur="8s" 
                   repeatCount="indefinite" />
        </path>
        <path d="M140 85 Q175 100 140 115" stroke="#34495E" stroke-width="4" fill="none" stroke-linecap="round">
          <animate attributeName="d" 
                   values="M140 85 Q175 100 140 115;M140 85 Q180 100 140 115;M140 85 Q175 100 140 115" 
                   dur="8s" 
                   repeatCount="indefinite" />
        </path>
      </g>
    </g>
    
    <!-- Owl body group with head subgroup for animations -->
    <g id="owl-body" filter="url(#dropShadow)">
      <!-- Main owl face with feather texture -->
      <circle cx="100" cy="100" r="60" fill="url(#owlGradient)" />
      <circle cx="100" cy="100" r="60" fill="url(#featherPattern)" opacity="0.7" />
      
      <!-- Head group for separate head animations -->
      <g id="owl-head">
        <!-- Ear tufts -->
        <g id="ear-tufts">
          <path d="M70 55 Q65 45 60 35 Q67 42 75 50 Z" fill="#2C3E50" />
          <path d="M130 55 Q135 45 140 35 Q133 42 125 50 Z" fill="#2C3E50" />
        </g>
      
      <!-- Eyes -->
      <g id="eyes">
        <!-- Left eye with enhanced details and animation -->
        <g id="left-eye">
          <circle cx="80" cy="85" r="20" fill="url(#eyeGradient)" filter="url(#innerShadow)" />
          <circle cx="80" cy="85" r="19" fill="none" stroke="#E5E9EA" stroke-width="1" />
          <circle cx="80" cy="85" r="12" fill="url(#irisGradient)">
            <animate attributeName="r" values="12;11;12" dur="3s" repeatCount="indefinite" />
          </circle>
          <circle id="left-pupil" cx="80" cy="85" r="6" fill="#2C3E50">
            <animate attributeName="r" values="6;5;6" dur="3s" repeatCount="indefinite" />
          </circle>
          <circle cx="77" cy="82" r="4" fill="white" opacity="0.8" />
          <circle cx="83" cy="87" r="2" fill="white" opacity="0.5" />
        </g>
        
        <!-- Right eye with enhanced details and animation -->
        <g id="right-eye">
          <circle cx="120" cy="85" r="20" fill="url(#eyeGradient)" filter="url(#innerShadow)" />
          <circle cx="120" cy="85" r="19" fill="none" stroke="#E5E9EA" stroke-width="1" />
          <circle cx="120" cy="85" r="12" fill="url(#irisGradient)">
            <animate attributeName="r" values="12;11;12" dur="3s" repeatCount="indefinite" />
          </circle>
          <circle id="right-pupil" cx="120" cy="85" r="6" fill="#2C3E50">
            <animate attributeName="r" values="6;5;6" dur="3s" repeatCount="indefinite" />
          </circle>
          <circle cx="117" cy="82" r="4" fill="white" opacity="0.8" />
          <circle cx="123" cy="87" r="2" fill="white" opacity="0.5" />
        </g>
      </g>
      
      <!-- Enhanced beak with better shading -->
      <path d="M95 105 L100 120 L105 105 Z" fill="url(#beakGradient)" />
      <path d="M97 107 L100 116 L103 107" fill="#D35400" opacity="0.5" />
      <path d="M98 110 L100 114 L102 110" stroke="#F39C12" stroke-width="0.5" fill="none" opacity="0.6" />
      
      <!-- Face markings -->
      <path d="M85 95 A55 55 0 0 0 115 95" stroke="white" stroke-width="1" fill="none" opacity="0.2" />
      
      <!-- Belly feather pattern -->
      <path d="M80 125 Q100 135 120 125" fill="none" stroke="white" stroke-width="2" opacity="0.2" />
      <path d="M85 130 Q100 140 115 130" fill="none" stroke="white" stroke-width="1.5" opacity="0.15" />
      <path d="M90 135 Q100 145 110 135" fill="none" stroke="white" stroke-width="1" opacity="0.1" />
    </g>
    
    <!-- Small decorative elements with more details -->
    <g id="decorations">
      <circle cx="160" cy="40" r="3" fill="#3498DB" opacity="0.6">
        <animate attributeName="r" values="3;3.5;3" dur="5s" repeatCount="indefinite" />
      </circle>
      <circle cx="40" cy="40" r="3" fill="#3498DB" opacity="0.6">
        <animate attributeName="r" values="3;3.5;3" dur="5s" begin="1s" repeatCount="indefinite" />
      </circle>
      <circle cx="40" cy="160" r="3" fill="#3498DB" opacity="0.6">
        <animate attributeName="r" values="3;3.5;3" dur="5s" begin="2s" repeatCount="indefinite" />
      </circle>
      <circle cx="160" cy="160" r="3" fill="#3498DB" opacity="0.6">
        <animate attributeName="r" values="3;3.5;3" dur="5s" begin="3s" repeatCount="indefinite" />
      </circle>
      
      <!-- Added corner decorations -->
      <path d="M30 30 L40 30 L40 40" fill="none" stroke="#3498DB" stroke-width="0.8" opacity="0.4" />
      <path d="M170 30 L160 30 L160 40" fill="none" stroke="#3498DB" stroke-width="0.8" opacity="0.4" />
      <path d="M30 170 L40 170 L40 160" fill="none" stroke="#3498DB" stroke-width="0.8" opacity="0.4" />
      <path d="M170 170 L160 170 L160 160" fill="none" stroke="#3498DB" stroke-width="0.8" opacity="0.4" />
    </g>
    
    <!-- Enhanced sparkles with more details -->
    <g id="sparkles">
      <circle cx="60" cy="60" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      <circle cx="140" cy="60" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      <circle cx="60" cy="140" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      <circle cx="140" cy="140" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      <circle cx="100" cy="40" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      <circle cx="100" cy="160" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      
      <!-- Added extra sparkles -->
      <circle cx="30" cy="100" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
      <circle cx="170" cy="100" r="1" fill="white" opacity="0.8" filter="url(#sparkle)" />
    </g>
    
    <!-- Enhanced brand text with better styling and accessibility -->
    <g id="brand-elements">
      <text id="logo-title" x="100" y="180" text-anchor="middle" fill="url(#brandGradient)" font-size="16" font-weight="bold" filter="url(#softGlow)" opacity="0.9">Owldoo</text>
      
      <!-- Enhanced tagline with subtle animation -->
      <text id="logo-tagline" x="100" y="192" text-anchor="middle" fill="#3498DB" font-size="7" opacity="0.8">
        <tspan>Wisdom on schedule</tspan>
        <animate attributeName="opacity" values="0.8;1;0.8" dur="8s" repeatCount="indefinite" />
      </text>
      
      <!-- Status indicator with accessibility label -->
      <g id="status-indicator">
        <circle cx="175" cy="175" r="4" fill="#2ECC71" opacity="0.8">
          <animate attributeName="opacity" values="0.8;0.4;0.8" dur="2s" repeatCount="indefinite" />
        </circle>
        <title>Active Status Indicator</title>
      </g>
    </g>
  </g>
  
  <!-- Add Script for interactivity -->
  <script type="text/javascript"><![CDATA[
    // Function to add the click event listeners for state changes
    document.addEventListener("DOMContentLoaded", function() {
      // Get the logo element and state trigger buttons
      const logo = document.getElementById("owldoo-logo");
      const alertTrigger = document.getElementById("alert-trigger");
      const thinkTrigger = document.getElementById("think-trigger");
      const happyTrigger = document.getElementById("happy-trigger");
      const flapTrigger = document.getElementById("flap-trigger");
      
      // Performance optimization: Cache DOM elements
      const alertBubble = document.getElementById("alert-bubble");
      const happyBubble = document.getElementById("happy-bubble");
      const alertExpression = document.getElementById("alert-expression");
      const happyExpression = document.getElementById("happy-expression");
      const thinkingExpression = document.getElementById("thinking-expression");
      
      // Function to reset all states
      function resetAllStates() {
        logo.classList.remove("alert", "thinking", "happy", "flapping");
        alertBubble.style.opacity = "0";
        happyBubble.style.opacity = "0";
        alertExpression.style.opacity = "0";
        happyExpression.style.opacity = "0";
        thinkingExpression.style.opacity = "0";
      }
      
      // Add event listeners for state changes
      alertTrigger.addEventListener("click", function() {
        resetAllStates();
        logo.classList.add("alert");
        alertBubble.style.opacity = "0.8";
        alertExpression.style.opacity = "1";
      });
      
      thinkTrigger.addEventListener("click", function() {
        resetAllStates();
        logo.classList.add("thinking");
        thinkingExpression.style.opacity = "1";
      });
      
      happyTrigger.addEventListener("click", function() {
        resetAllStates();
        logo.classList.add("happy");
        happyBubble.style.opacity = "0.8";
        happyExpression.style.opacity = "1";
      });
      
      flapTrigger.addEventListener("click", function() {
        resetAllStates();
        logo.classList.add("flapping");
      });
      
      // Add double-click to reset state
      logo.addEventListener("dblclick", resetAllStates);
      
      // Add touch support for mobile devices
      if ('ontouchstart' in window) {
        alertTrigger.addEventListener("touchstart", function(e) {
          e.preventDefault();
          resetAllStates();
          logo.classList.add("alert");
          alertBubble.style.opacity = "0.8";
          alertExpression.style.opacity = "1";
        });
        
        thinkTrigger.addEventListener("touchstart", function(e) {
          e.preventDefault();
          resetAllStates();
          logo.classList.add("thinking");
          thinkingExpression.style.opacity = "1";
        });
        
        happyTrigger.addEventListener("touchstart", function(e) {
          e.preventDefault();
          resetAllStates();
          logo.classList.add("happy");
          happyBubble.style.opacity = "0.8";
          happyExpression.style.opacity = "1";
        });
        
        flapTrigger.addEventListener("touchstart", function(e) {
          e.preventDefault();
          resetAllStates();
          logo.classList.add("flapping");
        });
        
        // Double tap for reset (simplified)
        let lastTap = 0;
        logo.addEventListener("touchend", function(e) {
          const currentTime = new Date().getTime();
          const tapLength = currentTime - lastTap;
          if (tapLength < 500 && tapLength > 0) {
            resetAllStates();
            e.preventDefault();
          }
          lastTap = currentTime;
        });
      }
      
      // Feature detection and fallbacks
      if (!CSS.supports('animation', 'blink 1s') && !CSS.supports('-webkit-animation', 'blink 1s')) {
        console.log('Animation not supported, applying static fallbacks');
        // Simple fallback for browsers without animation support
        document.querySelectorAll("[animation]").forEach(elem => {
          elem.style.opacity = "1"; // Ensure elements are visible
        });
      }
      
      // Accessibility improvements
      const triggers = [alertTrigger, thinkTrigger, happyTrigger, flapTrigger];
      triggers.forEach(trigger => {
        trigger.setAttribute("role", "button");
        trigger.setAttribute("tabindex", "0");
        trigger.addEventListener("keydown", function(e) {
          if (e.key === "Enter" || e.key === " ") {
            e.preventDefault();
            trigger.click();
          }
        });
      });
    });
  ]]></script>
</svg>